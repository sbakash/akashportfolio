{"ast":null,"code":"import hotEmitter from \"webpack/hot/emitter.js\";\nimport { log } from \"./log.js\";\n/** @typedef {import(\"../index\").Options} Options\n/** @typedef {import(\"../index\").Status} Status\n\n/**\n * @param {Options} options\n * @param {Status} status\n */\n\nfunction reloadApp(_ref, status) {\n  var hot = _ref.hot,\n      liveReload = _ref.liveReload;\n\n  if (status.isUnloading) {\n    return;\n  }\n\n  var currentHash = status.currentHash,\n      previousHash = status.previousHash;\n  var isInitial = currentHash.indexOf(\n  /** @type {string} */\n  previousHash) >= 0;\n\n  if (isInitial) {\n    return;\n  }\n  /**\n   * @param {Window} rootWindow\n   * @param {number} intervalId\n   */\n\n\n  function applyReload(rootWindow, intervalId) {\n    clearInterval(intervalId);\n    log.info(\"App updated. Reloading...\");\n    rootWindow.location.reload();\n  }\n\n  var search = self.location.search.toLowerCase();\n  var allowToHot = search.indexOf(\"webpack-dev-server-hot=false\") === -1;\n  var allowToLiveReload = search.indexOf(\"webpack-dev-server-live-reload=false\") === -1;\n\n  if (hot && allowToHot) {\n    log.info(\"App hot update...\");\n    hotEmitter.emit(\"webpackHotUpdate\", status.currentHash);\n\n    if (typeof self !== \"undefined\" && self.window) {\n      // broadcast update to window\n      self.postMessage(\"webpackHotUpdate\".concat(status.currentHash), \"*\");\n    }\n  } // allow refreshing the page only if liveReload isn't disabled\n  else if (liveReload && allowToLiveReload) {\n    var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)\n\n    var intervalId = self.setInterval(function () {\n      if (rootWindow.location.protocol !== \"about:\") {\n        // reload immediately if protocol is valid\n        applyReload(rootWindow, intervalId);\n      } else {\n        rootWindow = rootWindow.parent;\n\n        if (rootWindow.parent === rootWindow) {\n          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n          applyReload(rootWindow, intervalId);\n        }\n      }\n    });\n  }\n}\n\nexport default reloadApp;","map":{"version":3,"names":["hotEmitter","log","reloadApp","_ref","status","hot","liveReload","isUnloading","currentHash","previousHash","isInitial","indexOf","applyReload","rootWindow","intervalId","clearInterval","info","location","reload","search","self","toLowerCase","allowToHot","allowToLiveReload","emit","window","postMessage","concat","setInterval","protocol","parent"],"sources":["/Users/akashsb/Documents/GitHub/akashportfolio/git/Untitled/node_modules/webpack-dev-server/client/utils/reloadApp.js"],"sourcesContent":["import hotEmitter from \"webpack/hot/emitter.js\";\nimport { log } from \"./log.js\";\n\n/** @typedef {import(\"../index\").Options} Options\n/** @typedef {import(\"../index\").Status} Status\n\n/**\n * @param {Options} options\n * @param {Status} status\n */\nfunction reloadApp(_ref, status) {\n  var hot = _ref.hot,\n    liveReload = _ref.liveReload;\n  if (status.isUnloading) {\n    return;\n  }\n  var currentHash = status.currentHash,\n    previousHash = status.previousHash;\n  var isInitial = currentHash.indexOf( /** @type {string} */previousHash) >= 0;\n  if (isInitial) {\n    return;\n  }\n\n  /**\n   * @param {Window} rootWindow\n   * @param {number} intervalId\n   */\n  function applyReload(rootWindow, intervalId) {\n    clearInterval(intervalId);\n    log.info(\"App updated. Reloading...\");\n    rootWindow.location.reload();\n  }\n  var search = self.location.search.toLowerCase();\n  var allowToHot = search.indexOf(\"webpack-dev-server-hot=false\") === -1;\n  var allowToLiveReload = search.indexOf(\"webpack-dev-server-live-reload=false\") === -1;\n  if (hot && allowToHot) {\n    log.info(\"App hot update...\");\n    hotEmitter.emit(\"webpackHotUpdate\", status.currentHash);\n    if (typeof self !== \"undefined\" && self.window) {\n      // broadcast update to window\n      self.postMessage(\"webpackHotUpdate\".concat(status.currentHash), \"*\");\n    }\n  }\n  // allow refreshing the page only if liveReload isn't disabled\n  else if (liveReload && allowToLiveReload) {\n    var rootWindow = self;\n\n    // use parent window for reload (in case we're in an iframe with no valid src)\n    var intervalId = self.setInterval(function () {\n      if (rootWindow.location.protocol !== \"about:\") {\n        // reload immediately if protocol is valid\n        applyReload(rootWindow, intervalId);\n      } else {\n        rootWindow = rootWindow.parent;\n        if (rootWindow.parent === rootWindow) {\n          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n          applyReload(rootWindow, intervalId);\n        }\n      }\n    });\n  }\n}\nexport default reloadApp;"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,SAASC,GAAT,QAAoB,UAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIC,GAAG,GAAGF,IAAI,CAACE,GAAf;EAAA,IACEC,UAAU,GAAGH,IAAI,CAACG,UADpB;;EAEA,IAAIF,MAAM,CAACG,WAAX,EAAwB;IACtB;EACD;;EACD,IAAIC,WAAW,GAAGJ,MAAM,CAACI,WAAzB;EAAA,IACEC,YAAY,GAAGL,MAAM,CAACK,YADxB;EAEA,IAAIC,SAAS,GAAGF,WAAW,CAACG,OAAZ;EAAqB;EAAqBF,YAA1C,KAA2D,CAA3E;;EACA,IAAIC,SAAJ,EAAe;IACb;EACD;EAED;AACF;AACA;AACA;;;EACE,SAASE,WAAT,CAAqBC,UAArB,EAAiCC,UAAjC,EAA6C;IAC3CC,aAAa,CAACD,UAAD,CAAb;IACAb,GAAG,CAACe,IAAJ,CAAS,2BAAT;IACAH,UAAU,CAACI,QAAX,CAAoBC,MAApB;EACD;;EACD,IAAIC,MAAM,GAAGC,IAAI,CAACH,QAAL,CAAcE,MAAd,CAAqBE,WAArB,EAAb;EACA,IAAIC,UAAU,GAAGH,MAAM,CAACR,OAAP,CAAe,8BAAf,MAAmD,CAAC,CAArE;EACA,IAAIY,iBAAiB,GAAGJ,MAAM,CAACR,OAAP,CAAe,sCAAf,MAA2D,CAAC,CAApF;;EACA,IAAIN,GAAG,IAAIiB,UAAX,EAAuB;IACrBrB,GAAG,CAACe,IAAJ,CAAS,mBAAT;IACAhB,UAAU,CAACwB,IAAX,CAAgB,kBAAhB,EAAoCpB,MAAM,CAACI,WAA3C;;IACA,IAAI,OAAOY,IAAP,KAAgB,WAAhB,IAA+BA,IAAI,CAACK,MAAxC,EAAgD;MAC9C;MACAL,IAAI,CAACM,WAAL,CAAiB,mBAAmBC,MAAnB,CAA0BvB,MAAM,CAACI,WAAjC,CAAjB,EAAgE,GAAhE;IACD;EACF,CAPD,CAQA;EARA,KASK,IAAIF,UAAU,IAAIiB,iBAAlB,EAAqC;IACxC,IAAIV,UAAU,GAAGO,IAAjB,CADwC,CAGxC;;IACA,IAAIN,UAAU,GAAGM,IAAI,CAACQ,WAAL,CAAiB,YAAY;MAC5C,IAAIf,UAAU,CAACI,QAAX,CAAoBY,QAApB,KAAiC,QAArC,EAA+C;QAC7C;QACAjB,WAAW,CAACC,UAAD,EAAaC,UAAb,CAAX;MACD,CAHD,MAGO;QACLD,UAAU,GAAGA,UAAU,CAACiB,MAAxB;;QACA,IAAIjB,UAAU,CAACiB,MAAX,KAAsBjB,UAA1B,EAAsC;UACpC;UACAD,WAAW,CAACC,UAAD,EAAaC,UAAb,CAAX;QACD;MACF;IACF,CAXgB,CAAjB;EAYD;AACF;;AACD,eAAeZ,SAAf"},"metadata":{},"sourceType":"module"}